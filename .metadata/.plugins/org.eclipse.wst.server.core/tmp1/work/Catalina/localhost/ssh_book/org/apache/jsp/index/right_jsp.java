/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-06-07 04:44:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.index;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class right_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.5.10.1.jar", Long.valueOf(1558585065844L));
    _jspx_dependants.put("jar:file:/C:/Users/hp/Desktop/实验/Web应用实验/web应用课程设计/OnlineBookstore/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/ssh_book_mysql/WEB-INF/lib/struts2-core-2.5.10.1.jar!/META-INF/struts-tags.tld", Long.valueOf(1488770942000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/right.css\" />\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 右侧边栏START -->\r\n");
      out.write("<div class=\"right text-left\">\r\n");
      out.write("                <aside class=\"widget tag-cloud\">\r\n");
      out.write("                    <h3 class=\"widget-title\">标签 <span>分类</span></h3>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">文学类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">教育类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">名著类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">小说类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">散文诗集</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">漫画类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">少儿类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">幼儿类</a>\r\n");
      out.write("                    <a href=\"#\" class=\"tags\">报刊杂志</a>\r\n");
      out.write("                </aside>\r\n");
      out.write("                <aside class=\"widget\">\r\n");
      out.write("                    <h3 class=\"widget-title\">图书 <span>推荐</span></h3>\r\n");
      out.write("                    \r\n");
      out.write("                    <article class=\"widget-post\">\r\n");
      out.write("                        <h5>《明朝那些事儿》</h5><br>\r\n");
      out.write("                        <a href=\"detail.action?bookid=7\">本书对明朝十七帝和其他王公权贵和小人物的命运进行全景展示，尤其对官场政治、战争、帝王心术着墨最多，并加入对当时政治经济制度、人伦道德的演义。</a>\r\n");
      out.write("                    </article>\r\n");
      out.write("                    <article class=\"widget-post\">\r\n");
      out.write("                        <h5>《你是人间四月天》</h5><br>\r\n");
      out.write("                        <a href=\"detail.action?bookid=29\">《你是人间四月天》收录了林徽因几乎所有的诗歌、散文、小说。</a>\r\n");
      out.write("                    </article>\r\n");
      out.write("                    <article class=\"widget-post\">\r\n");
      out.write("                        <h5>《傅雷家书》</h5><br>\r\n");
      out.write("                        <a href=\"detail.action?bookid=40\">本书以最小最精之篇幅反映《傅雷家书》全貌，再现傅氏兄弟成长的家教背景，全面展示傅雷家风。</a>\r\n");
      out.write("                    </article>\r\n");
      out.write("                    <article class=\"widget-post\">\r\n");
      out.write("                        <img src=\"images/header/turn_book.gif\" style=\"width: 200px;height:130px;margin-top: 30px;margin-bottom: 30px;\"/>\r\n");
      out.write("                        <a href=\"detail.jsp\">其他好书推荐~</a>\r\n");
      out.write("                    </article>\r\n");
      out.write("                </aside>\r\n");
      out.write("            \r\n");
      out.write("</div>\r\n");
      out.write("\t\t\t<!-- 右侧边栏END -->\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
